@page "/student_test_results/{StudentId:int}"
@rendermode InteractiveServer
@using BlazorApp3.Models
@using Microsoft.EntityFrameworkCore
@using BlazorApp3.Components.Models.ModelsDataBases
@inject DataBaseContext DbContext
@inject NavigationManager Navigation

<h3>Результаты прохождения тестов</h3>

@if (results == null)
{
    <p>Загрузка результатов...</p>
}
else if (!results.Any())
{
    <p>Вы еще не прошли ни одного теста</p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Название теста</th>
            <th>Результат (%)</th>
            <th>Дата прохождения теста(хз - с наилучшим результатом)</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var result in results)
        {
            <tr>
                <td>@result.Test.Name</td>
                <td>@result.Score</td>
                <th>@result.TestDate</th>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    [Parameter]
    public int StudentId { get; set; }

    private List<TestResult>? results;

    protected override async Task OnInitializedAsync()
    {
        await LoadResults();
    }

    private async Task LoadResults()
    {
        results = await DbContext.TestResults
            .Include(tr => tr.Test)
            .Where(tr => tr.StudentId == StudentId)
            .OrderByDescending(tr => tr.TestDate)
            .ToListAsync();
    }
}